// Generated from Compilator.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class CompilatorLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, IF=4, ENDIF=5, FUNCTION=6, ENDFUNCTION=7, WRITE=8, 
		READREAL=9, READINT=10, READSTRING=11, ID=12, REAL=13, INT=14, STRING=15, 
		BOOL=16, ADD=17, SUB=18, MULT=19, DIV=20, OR=21, AND=22, XOR=23, NEG=24, 
		NEWLINE=25, WS=26, EQ=27, NEQ=28;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "IF", "ENDIF", "FUNCTION", "ENDFUNCTION", "WRITE", 
			"READREAL", "READINT", "READSTRING", "ID", "REAL", "INT", "STRING", "BOOL", 
			"ADD", "SUB", "MULT", "DIV", "OR", "AND", "XOR", "NEG", "NEWLINE", "WS", 
			"EQ", "NEQ"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'='", "'('", "')'", "'if'", "'endif'", "'function'", "'endfunction'", 
			"'print '", "'readr '", "'readi '", "'reads '", null, null, null, null, 
			null, "'+'", "'-'", "'*'", "'/'", "'||'", "'&&'", "'^'", "'!'", null, 
			null, "'=='", "'!='"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, "IF", "ENDIF", "FUNCTION", "ENDFUNCTION", "WRITE", 
			"READREAL", "READINT", "READSTRING", "ID", "REAL", "INT", "STRING", "BOOL", 
			"ADD", "SUB", "MULT", "DIV", "OR", "AND", "XOR", "NEG", "NEWLINE", "WS", 
			"EQ", "NEQ"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CompilatorLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Compilator.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u001c\u00c6\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b"+
		"\u0004\u000b{\b\u000b\u000b\u000b\f\u000b|\u0001\f\u0004\f\u0080\b\f\u000b"+
		"\f\f\f\u0081\u0001\f\u0001\f\u0004\f\u0086\b\f\u000b\f\f\f\u0087\u0001"+
		"\r\u0004\r\u008b\b\r\u000b\r\f\r\u008c\u0001\u000e\u0001\u000e\u0005\u000e"+
		"\u0091\b\u000e\n\u000e\f\u000e\u0094\t\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u000f\u0003\u000f\u00a1\b\u000f\u0001\u0010\u0001"+
		"\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0003"+
		"\u0018\u00b6\b\u0018\u0001\u0018\u0001\u0018\u0001\u0019\u0004\u0019\u00bb"+
		"\b\u0019\u000b\u0019\f\u0019\u00bc\u0001\u0019\u0001\u0019\u0001\u001a"+
		"\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001b\u0000\u0000"+
		"\u001c\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006"+
		"\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e"+
		"\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017"+
		"/\u00181\u00193\u001a5\u001b7\u001c\u0001\u0000\u0003\u0002\u0000AZaz"+
		"\u0002\u0000\"\"\\\\\u0002\u0000\t\t  \u00cd\u0000\u0001\u0001\u0000\u0000"+
		"\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000"+
		"\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000"+
		"\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000"+
		"\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000"+
		"\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000"+
		"\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000"+
		"\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000"+
		"\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001"+
		"\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000"+
		"\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000"+
		"\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001"+
		"\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000"+
		"\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00019\u0001\u0000\u0000\u0000"+
		"\u0003;\u0001\u0000\u0000\u0000\u0005=\u0001\u0000\u0000\u0000\u0007?"+
		"\u0001\u0000\u0000\u0000\tB\u0001\u0000\u0000\u0000\u000bH\u0001\u0000"+
		"\u0000\u0000\rQ\u0001\u0000\u0000\u0000\u000f]\u0001\u0000\u0000\u0000"+
		"\u0011d\u0001\u0000\u0000\u0000\u0013k\u0001\u0000\u0000\u0000\u0015r"+
		"\u0001\u0000\u0000\u0000\u0017z\u0001\u0000\u0000\u0000\u0019\u007f\u0001"+
		"\u0000\u0000\u0000\u001b\u008a\u0001\u0000\u0000\u0000\u001d\u008e\u0001"+
		"\u0000\u0000\u0000\u001f\u00a0\u0001\u0000\u0000\u0000!\u00a2\u0001\u0000"+
		"\u0000\u0000#\u00a4\u0001\u0000\u0000\u0000%\u00a6\u0001\u0000\u0000\u0000"+
		"\'\u00a8\u0001\u0000\u0000\u0000)\u00aa\u0001\u0000\u0000\u0000+\u00ad"+
		"\u0001\u0000\u0000\u0000-\u00b0\u0001\u0000\u0000\u0000/\u00b2\u0001\u0000"+
		"\u0000\u00001\u00b5\u0001\u0000\u0000\u00003\u00ba\u0001\u0000\u0000\u0000"+
		"5\u00c0\u0001\u0000\u0000\u00007\u00c3\u0001\u0000\u0000\u00009:\u0005"+
		"=\u0000\u0000:\u0002\u0001\u0000\u0000\u0000;<\u0005(\u0000\u0000<\u0004"+
		"\u0001\u0000\u0000\u0000=>\u0005)\u0000\u0000>\u0006\u0001\u0000\u0000"+
		"\u0000?@\u0005i\u0000\u0000@A\u0005f\u0000\u0000A\b\u0001\u0000\u0000"+
		"\u0000BC\u0005e\u0000\u0000CD\u0005n\u0000\u0000DE\u0005d\u0000\u0000"+
		"EF\u0005i\u0000\u0000FG\u0005f\u0000\u0000G\n\u0001\u0000\u0000\u0000"+
		"HI\u0005f\u0000\u0000IJ\u0005u\u0000\u0000JK\u0005n\u0000\u0000KL\u0005"+
		"c\u0000\u0000LM\u0005t\u0000\u0000MN\u0005i\u0000\u0000NO\u0005o\u0000"+
		"\u0000OP\u0005n\u0000\u0000P\f\u0001\u0000\u0000\u0000QR\u0005e\u0000"+
		"\u0000RS\u0005n\u0000\u0000ST\u0005d\u0000\u0000TU\u0005f\u0000\u0000"+
		"UV\u0005u\u0000\u0000VW\u0005n\u0000\u0000WX\u0005c\u0000\u0000XY\u0005"+
		"t\u0000\u0000YZ\u0005i\u0000\u0000Z[\u0005o\u0000\u0000[\\\u0005n\u0000"+
		"\u0000\\\u000e\u0001\u0000\u0000\u0000]^\u0005p\u0000\u0000^_\u0005r\u0000"+
		"\u0000_`\u0005i\u0000\u0000`a\u0005n\u0000\u0000ab\u0005t\u0000\u0000"+
		"bc\u0005 \u0000\u0000c\u0010\u0001\u0000\u0000\u0000de\u0005r\u0000\u0000"+
		"ef\u0005e\u0000\u0000fg\u0005a\u0000\u0000gh\u0005d\u0000\u0000hi\u0005"+
		"r\u0000\u0000ij\u0005 \u0000\u0000j\u0012\u0001\u0000\u0000\u0000kl\u0005"+
		"r\u0000\u0000lm\u0005e\u0000\u0000mn\u0005a\u0000\u0000no\u0005d\u0000"+
		"\u0000op\u0005i\u0000\u0000pq\u0005 \u0000\u0000q\u0014\u0001\u0000\u0000"+
		"\u0000rs\u0005r\u0000\u0000st\u0005e\u0000\u0000tu\u0005a\u0000\u0000"+
		"uv\u0005d\u0000\u0000vw\u0005s\u0000\u0000wx\u0005 \u0000\u0000x\u0016"+
		"\u0001\u0000\u0000\u0000y{\u0007\u0000\u0000\u0000zy\u0001\u0000\u0000"+
		"\u0000{|\u0001\u0000\u0000\u0000|z\u0001\u0000\u0000\u0000|}\u0001\u0000"+
		"\u0000\u0000}\u0018\u0001\u0000\u0000\u0000~\u0080\u000209\u0000\u007f"+
		"~\u0001\u0000\u0000\u0000\u0080\u0081\u0001\u0000\u0000\u0000\u0081\u007f"+
		"\u0001\u0000\u0000\u0000\u0081\u0082\u0001\u0000\u0000\u0000\u0082\u0083"+
		"\u0001\u0000\u0000\u0000\u0083\u0085\u0005.\u0000\u0000\u0084\u0086\u0002"+
		"09\u0000\u0085\u0084\u0001\u0000\u0000\u0000\u0086\u0087\u0001\u0000\u0000"+
		"\u0000\u0087\u0085\u0001\u0000\u0000\u0000\u0087\u0088\u0001\u0000\u0000"+
		"\u0000\u0088\u001a\u0001\u0000\u0000\u0000\u0089\u008b\u000209\u0000\u008a"+
		"\u0089\u0001\u0000\u0000\u0000\u008b\u008c\u0001\u0000\u0000\u0000\u008c"+
		"\u008a\u0001\u0000\u0000\u0000\u008c\u008d\u0001\u0000\u0000\u0000\u008d"+
		"\u001c\u0001\u0000\u0000\u0000\u008e\u0092\u0005\"\u0000\u0000\u008f\u0091"+
		"\b\u0001\u0000\u0000\u0090\u008f\u0001\u0000\u0000\u0000\u0091\u0094\u0001"+
		"\u0000\u0000\u0000\u0092\u0090\u0001\u0000\u0000\u0000\u0092\u0093\u0001"+
		"\u0000\u0000\u0000\u0093\u0095\u0001\u0000\u0000\u0000\u0094\u0092\u0001"+
		"\u0000\u0000\u0000\u0095\u0096\u0005\"\u0000\u0000\u0096\u001e\u0001\u0000"+
		"\u0000\u0000\u0097\u0098\u0005t\u0000\u0000\u0098\u0099\u0005r\u0000\u0000"+
		"\u0099\u009a\u0005u\u0000\u0000\u009a\u00a1\u0005e\u0000\u0000\u009b\u009c"+
		"\u0005f\u0000\u0000\u009c\u009d\u0005a\u0000\u0000\u009d\u009e\u0005l"+
		"\u0000\u0000\u009e\u009f\u0005s\u0000\u0000\u009f\u00a1\u0005e\u0000\u0000"+
		"\u00a0\u0097\u0001\u0000\u0000\u0000\u00a0\u009b\u0001\u0000\u0000\u0000"+
		"\u00a1 \u0001\u0000\u0000\u0000\u00a2\u00a3\u0005+\u0000\u0000\u00a3\""+
		"\u0001\u0000\u0000\u0000\u00a4\u00a5\u0005-\u0000\u0000\u00a5$\u0001\u0000"+
		"\u0000\u0000\u00a6\u00a7\u0005*\u0000\u0000\u00a7&\u0001\u0000\u0000\u0000"+
		"\u00a8\u00a9\u0005/\u0000\u0000\u00a9(\u0001\u0000\u0000\u0000\u00aa\u00ab"+
		"\u0005|\u0000\u0000\u00ab\u00ac\u0005|\u0000\u0000\u00ac*\u0001\u0000"+
		"\u0000\u0000\u00ad\u00ae\u0005&\u0000\u0000\u00ae\u00af\u0005&\u0000\u0000"+
		"\u00af,\u0001\u0000\u0000\u0000\u00b0\u00b1\u0005^\u0000\u0000\u00b1."+
		"\u0001\u0000\u0000\u0000\u00b2\u00b3\u0005!\u0000\u0000\u00b30\u0001\u0000"+
		"\u0000\u0000\u00b4\u00b6\u0005\r\u0000\u0000\u00b5\u00b4\u0001\u0000\u0000"+
		"\u0000\u00b5\u00b6\u0001\u0000\u0000\u0000\u00b6\u00b7\u0001\u0000\u0000"+
		"\u0000\u00b7\u00b8\u0005\n\u0000\u0000\u00b82\u0001\u0000\u0000\u0000"+
		"\u00b9\u00bb\u0007\u0002\u0000\u0000\u00ba\u00b9\u0001\u0000\u0000\u0000"+
		"\u00bb\u00bc\u0001\u0000\u0000\u0000\u00bc\u00ba\u0001\u0000\u0000\u0000"+
		"\u00bc\u00bd\u0001\u0000\u0000\u0000\u00bd\u00be\u0001\u0000\u0000\u0000"+
		"\u00be\u00bf\u0006\u0019\u0000\u0000\u00bf4\u0001\u0000\u0000\u0000\u00c0"+
		"\u00c1\u0005=\u0000\u0000\u00c1\u00c2\u0005=\u0000\u0000\u00c26\u0001"+
		"\u0000\u0000\u0000\u00c3\u00c4\u0005!\u0000\u0000\u00c4\u00c5\u0005=\u0000"+
		"\u0000\u00c58\u0001\u0000\u0000\u0000\t\u0000|\u0081\u0087\u008c\u0092"+
		"\u00a0\u00b5\u00bc\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}